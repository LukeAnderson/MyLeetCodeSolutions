public  bool IsValid(string s)
    {
        if (s.Length == 1) return false;
        Dictionary<char, char> parens = new Dictionary<char, char>();

        parens.Add('(', ')');
        parens.Add('[', ']');
        parens.Add('{', '}');

        List<char> stack = new List<char>();
        for(int i = 0; i<s.Length; i++)
        {
            try
            {
                if (parens.TryGetValue(s[i], out char neededClosingParenthesis))
                    stack.Add(neededClosingParenthesis);
                else if (stack[stack.Count-1] != s[i])
                    return false;
                else
                    stack.RemoveAt(stack.Count-1);
            }
            catch (ArgumentOutOfRangeException)
            {
                return false;
            }
        }
        return stack.Count == 0 ? true : false;
    }